# The root directory for the inconsistency resources files
# This can be checked out directly online (hg clone XXX)
inconsistency.home=/home/paulc/omc/inconsistencyinspectorresources/

# The values below can reference variables used in the build.xml file for the project being analyzed (e.g., variables like ${build} can be used).

# This is where the generated reports will be saved
# This can be an absolute or a relative (e.g., iReports/)
#
# This _must_ be report/ for now; it is hard coded in the dynamic trace writer
# 		report/static/ will contain the static traces
#		report/dynamic/ will contain the dynamic traces
report.home=report/

###
### STATIC SETTINGS
###

# Location of the _compiled_ source files.
inconsistency.static.src=${classes.dir}

# Location of the _compiled_ test files.
#	Note: If this is the same as the source files, just repeat the source file value, do not leave it blank.
inconsistency.static.test=${test.classes.dir}

inconsistency.static.other1=${util.classes.dir}

# Location of the source _java_ test files.
test.source.root=${test.src.dir}

###
### DYNAMIC SETTINGS (static settings required as well for dynamic tracing)
###

# This is the classpath id used in the build.xml file for your project
inconsistency.classpath=junit.classpath

# This is the aspect list file; the file points to the tracer aspect to use.
# If the system you're tracing is not in the examples/ directory, you should
# copy the aspect.lst file from inconsistency.home, put it in your project's
# directory, and modify it to point to your modified copy of Tracer.aj.
inconsistency.aspect.lst=aspect.lst

# This is the directory the instrumented files will be written to
inconsistency.instrumented=instrumentedClasses
